
(* 
Todo
 - Networks
 - Ranges
 - Address classification 
   https://www.iana.org/assignments/ipv4-address-space/ipv4-address-space.xhtml
   https://www.iana.org/assignments/ipv6-address-space/ipv6-address-space.xhtml
   Create automatic import script? The data is available as XML and csv.
   https://www.iana.org/assignments/ipv4-address-space/ipv4-address-space.csv
   https://www.iana.org/assignments/ipv6-address-space/ipv6-address-space-1.csv

Ideas

 - EUI Addresses
 - IPv4 to IPv6 conversion
*)

exception Result_out_of_range of string
exception Parser_error of string


module type Address = sig
  type t

  val one : t
  val ( < ) : t -> t -> bool
  val ( > ) : t -> t -> bool
  val of_string : string -> t option
  val to_string : t -> string
  val add_int : t -> int -> t
  val sub_int : t -> int -> t
  val add : t -> t -> t
  val sub : t -> t -> t
end

module type Range = sig
  type r

  val of_string : string -> r option
  val to_string : r -> string
  val element_of : r -> bool
  val intersect : r -> r -> r
end

module type Network = sig
  type n

  val of_string : string -> n option
  val to_string : n -> string
  val element_of : n -> bool
  val subnet_of : n -> n -> bool
  val prefix_len : n -> int
end

module type IPv4 = sig
  type t

  module type Address = sig
    include Address with type t = t
  end

  module type Range = sig
    include Range
    val make : t -> t -> r option
    val size : r -> t
  end

  module type Network = sig
    include Network
    val make : t -> int -> n option
  end
end

module type IPv6 = sig
  type t

  module type Address = sig
    include Address with type t = t
    (*
    val of_ipv4_address : IPv4.Address.t -> t
    val to_ipv4_address : t -> IPv4.Address.t option
    *)
  end

  module type Range = sig
    include Range
    val make : t -> t -> r option
    val size : r -> t
  end

  module type Network = sig
    include Network
    val make : t -> int -> n option
  end
end

type nwaddress =
  | NoAddress

(*
type ipaddress =
  | IPv4Address of IPv4.Address.t
  | IPv6Address of IPv6.Address.t
  | IPv4Range of IPv4.Range.r
  | IPv6Range of IPv6.Range.r
  | IPv4Network of IPv4.Network.n
  | IPv6Network of IPv6.Network.n
*)

